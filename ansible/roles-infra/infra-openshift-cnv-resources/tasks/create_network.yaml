---
# TODO CHECK FIRST IF NETWORK EXISTS
- name: Get Network if exists 
  k8s_info:
    kind: NetworkAttachmentDefinition
    namespace: "{{ openshift_cnv_project_name }}"
    name: "{{ _network.name }}"
  register: networkinfo

- name: Create network add vlan ID to used list
  when: networkinfo.resources == []
  block:
  - name: Get the ConfigMap of used vlans
    k8s_info:
      kind: ConfigMap
      namespace: default
      name: vlansused
    register: vlansused

  - name: Obtain a random available VLAN Id
    set_fact:
      available_vlan_id: "{{ range(2,59)|difference(vlansused.resources[0].data.vlans|default('[]') | from_json)| random }}"

  - name: Update ConfigMap to set this vlan will be in used
    k8s:
      namespace: default
      apply: yes
      definition:
        kind: ConfigMap
        apiVersion: v1
        metadata:
          name: vlansused
        data:
          vlans: "{{ ((vlansused.resources[0].data.vlans | from_json) + [available_vlan_id|int]) | to_json}}"

  - name: Create network {{ _network.name }}
    k8s:
      definition:
        apiVersion: v1
        kind: NetworkAttachmentDefinition
        metadata:
          name: "{{ _network.name }}"
          namespace: "{{ openshift_cnv_project_name }}"
        spec:
          config: "{{ config | to_json }}"
    vars: 
      config: "{'cniVersion':'0.3.1','type':'cnv-bridge','bridge':'br-internal','vlan': {{ available_vlan_id }}, 'mtu': 9000}"
#      config: "{'name':'{{ _network.name }}','cniVersion':'0.3.1','plugins':[{'type':'cnv-bridge','bridge':'br-internal','vlan': {{ available_vlan_id }}},{'type':'cnv-tuning'}]}"
