---
- name: Create Network(s)
  when: networks|default(False)
  block: 
    - name: Check if is locked
      k8s_info:
        kind: ConfigMap
        namespace: "default"
        name: "vlansused-lock"
      register: cm
      retries: 60
      delay: "{{ range(5,10) | random }}"
      until: cm.resources == []

    - name: Double check is not locked again
      k8s_info:
        kind: ConfigMap
        namespace: "default"
        name: "vlansused-lock"
      register: cm
      retries: 60
      delay: "{{ range(5,10) | random }}"
      until: cm.resources == []

    - name: Create a lock
      k8s:
        definition:
          kind: ConfigMap
          metadata:
            namespace: "default"
            name: "vlansused-lock"

    - name: Check which networks have to be created
      include_tasks: check_network.yaml
      loop: "{{ networks|default([])}}"
      loop_control:
        loop_var: _network

    - name: Get the ConfigMap of used vlans
      k8s_info:
        kind: ConfigMap
        namespace: default
        name: vlansused
      register: vlansused

    - name: Obtain available VLANs
      set_fact:
        available_vlan_ids: "{{ (range(2,59)|difference(vlansused.resources[0].data.vlans|default('[]') | from_json))[:_networks_to_create|length]}}"

    - name: Update ConfigMap to set this vlan will be in used
      k8s:
        namespace: default
        apply: yes
        definition:
          kind: ConfigMap
          apiVersion: v1
          metadata:
            name: vlansused
          data:
            vlans: "{{ ((vlansused.resources[0].data.vlans | from_json) + available_vlan_ids) | to_json}}"

    - name: Remove the lock
      k8s:
        state: absent
        definition:
          kind: ConfigMap
          metadata:
            namespace: "default"
            name: "vlansused-lock"

    - name: Create Networks
      register: r_openshift_cnv_networks
      loop: "{{ networks|default([])}}"
      loop_control:
        loop_var: _network
        index_var: _network_idx
      include_tasks: create_network.yaml
  rescue: 
    - name: Remove the lock
      k8s:
        state: absent
        definition:
          kind: ConfigMap
          metadata:
            namespace: "default"
            name: "vlansused-lock"





