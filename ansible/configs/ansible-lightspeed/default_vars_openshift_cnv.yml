---
# -------------------------------------------------------------------
# Default Variables for OpenShift CNV
# -------------------------------------------------------------------

# The type of cloud provider this will be deployed to
cloud_provider: openshift_cnv
subdomain_base_short: "{{ guid }}"
subdomain_base_suffix: "{{ openshift_cnv_apps_domain }}"
subdomain_base: "{{ subdomain_base_short }}.{{ subdomain_base_suffix }}"

# This is the user that Ansible will use to connect to the nodes it is
# configuring from the admin/control host
ansible_user: cloud-user
remote_user: cloud-user

# OpenShift CNV project name
openshift_cnv_project_name: "{{ env_type }}-{{ guid }}"

# Use Dynamic DNS. Always true
use_dynamic_dns: true

# Whether to wait for an ack from the DNS servers before continuing
wait_for_dns: true

# The base domain
# osp_cluster_dns_zone needs to come from secrets
# subdomain_base_suffix: "{{ osp_cluster_dns_zone }}"
ocp4_base_domain: "{{ osp_cluster_dns_zone }}"

# Bastion Configuration
bastion_instance_image: rhel-9.1
bastion_cores: 2
bastion_memory: 2G
bastion_rootfs_size: 30Gi

instances:
  - name: bastion
    count: 1
    unique: true
    alt_name: bastion
    memory: "{{ bastion_memory }}"
    cores: "{{ bastion_cores }}"
    image_size: "{{ bastion_rootfs_size }}"
    image: "{{ bastion_instance_image }}"
    metadata:
      - AnsibleGroup: "bastions"
      - function: bastion
      - user: "{{ student_name }}"
      - project: "{{ project_tag }}"
      - ostype: linux
      - Purpose: "{{ purpose }}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ guid }}"
    networks:
      - default
    services:
      - port: 443
        protocol: TCP
        targetPort: 443
        name: client-https
      - port: 80
        protocol: TCP
        targetPort: 80
        name: client-http
      - port: 6443
        protocol: TCP
        targetPort: 6443
        name: bastion-api

    routes:
      - name: bastion-https
        host: bastion
        service: bastion-https
        targetPort: 443
        tls: true
      - name: bastion-http
        host: bastion
        service: bastion-http
        targetPort: 80
        tls: false
        path: "/.well-known/"
      - name: client-novnc
        service: client-novnc
        targetPort: 6080
        tls: true
