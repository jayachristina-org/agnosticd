---
- name: Step 005 Post Software
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  tags:
  - step005
  - post_software
  tasks:

  - name: Entering the prp-binder post_software.yml
    debug:
      msg:
      - Entering the prp-binder post_software.yml

  - when: fail_post_software | default(false) | bool
    name: Fail the prp-binder post_software.yml if requested
    fail:
      msg: post_software.yml failed as requested

  - name: Pause post-software
    when: prp_binder_pause_post_software | default(pause_post_software) | default(false) | bool
    pause:
      seconds: "{{ prp_binder_pause_post_software_seconds | default(30) }}"

  - name: Test agnosticd_user_info from post_software with random string
    agnosticd_user_info:
      msg: Some random string {{ random_string }}
      data:
        random_string: "{{ random_string }}"
    vars:
      random_string: >-
        {{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}

  - name: Pass-through agnosticd_user_info data
    when: prp_binder_passthrough_user_data is defined
    agnosticd_user_info:
      data: >-
       {{ prp_binder_passthrough_user_data | from_yaml
       if prp_binder_passthrough_user_data is string
       else prp_binder_passthrough_user_data }}

  - when: prp_binder_multi_user | bool
    block:
    - name: Test set agnosticd_user_info for users
      agnosticd_user_info:
        user: student{{ n }}
        msg: student{{ n }} password is {{ random_string }}
        data:
          password: "{{ random_string }}"
      loop: "{{ range(1, 1 + prp_binder_user_count | int) | list }}"
      loop_control:
        loop_var: n
      vars:
        random_string: >-
          {{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}

    - name: Test add agnosticd_user_info for users
      agnosticd_user_info:
        user: student{{ n }}
        data:
          dns_domain: student{{ n }}.example.com
      loop: "{{ range(1, 1 + prp_binder_user_count | int) | list }}"
      loop_control:
        loop_var: n

  - when: prp_binder_multiline_secret is defined
    name: Ensure the multiline variable passed as secret is multiline
    assert:
      that: prp_binder_multiline_secret.rstrip().split('\n') | length > 1
      msg: Multiline secret is not multiline

  - name: Deploy Bookbag
    when:
    - bookbag_deploy | default(false) | bool
    - bookbag_git_repo | default('') != ''
    include_role:
      name: bookbag
    vars:
      ACTION: create

  - name: Print string expected by Cloudforms
    debug:
      msg: "Post-Software checks completed successfully"

  - name: Exiting the prp-binder post_software.yml
    debug:
      msg:
      - Exiting the prp-binder post_software.yml
...
