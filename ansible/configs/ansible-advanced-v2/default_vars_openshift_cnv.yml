---
################################################################################
### OpenShift CNV Environment variables
################################################################################

cloud_provider: openshift_cnv
ansible_user: cloud-user
remote_user: cloud-user
openshift_cnv_project_name: "{{ env_type }}-{{ guid }}"


# Networks, Router and subnets
networks:
  - name: default
    shared: "false"
    subnet_cidr: 192.168.50.0/24
    gateway_ip: 192.168.50.1
    allocation_start: 192.168.50.10
    allocation_end: 192.168.50.254
    dns_nameservers: []
    create_router: true
  - name: dev
    shared: "false"
    subnet_cidr: 192.168.51.0/24
    gateway_ip: 192.168.51.1
    allocation_start: 192.168.51.10
    allocation_end: 192.168.51.20
    dns_nameservers: []
    create_router: false
    router_name: default
  - name: prod
    shared: "false"
    subnet_cidr: 192.168.52.0/24
    gateway_ip: 192.168.52.1
    allocation_start: 192.168.52.10
    allocation_end: 192.168.52.20
    dns_nameservers: []
    router_name: default
    create_router: false
  - name: tower
    shared: "false"
    subnet_cidr: 192.168.53.0/24
    gateway_ip: 192.168.53.1
    allocation_start: 192.168.53.10
    allocation_end: 192.168.53.20
    dns_nameservers: []
    router_name: default
    create_router: false

# Default Image
__image: rhel-8.3

# For bastion node
bastion_instance_name: bastion
rootfs_size_bastion: 100
bastion_instance_type: GLOBAL-CPU_2_Memory_10240_Disk_60_flavor
bastion_instance_image: "rhel-8.3"
bastion_instance_image_size: 10Gi

# For satellite nodes
satellite_instance_image: ansible-dev-images-satellite-68-v3
satellite_instance_image_size: 100Gi
satellite_instance_type: GLOBAL-CPU_4_Memory_32768_Disk_60_flavor

# For Utilityvm
utilityvm_instance_type: GLOBAL-CPU_4_Memory_8192_Disk_30_flavor

# Environment Instances
instances:
  - name: "{{ bastion_instance_name | default('control') }}"
    unique: true
    public_dns: true
    dns_loadbalancer: true
    memory: "4G"
    cores: 2
    image: "{{ bastion_instance_image | default(__image) }}"
    image_size: "{{ bastion_instance_image_size }}"
    rootfs_size: "{{ rootfs_size_bastion | default(50)  }}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions,{{ bastion_group_name | default('controls') }}"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    services:
        - port: 49203
          protocol: TCP
          targetPort: 49203
          name: gitlab
        - port: 49204
          protocol: TCP
          targetPort: 49204
          name: vscode
    routes:
        - name: gitlab
          service: gitlab
          targetPort: 49203
          tls: True
        - name: vscode
          service: vscode
          targetPort: 49204
          tls: True


  - name: satellite
    count: "{{ satellite_instance_count | default(1) }}"
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    memory: "16G"
    cores: 8
    image: "{{ satellite_instance_image | default(__image) }}"
    image_size: "{{ satellite_instance_image_size }}"
    rootfs_size: "{{ rootfs_size_satellite | default(100)  }}"
    services:
        - port: 22
          protocol: TCP
          targetPort: 22
          name: satellite

        - port: 443
          protocol: TCP
          targetPort: 443
          name: satellite-https
    routes:
        - name: satellite
          service: satellite-https
          targetPort: 443
          tls: True
        
    tags:
      - key: "AnsibleGroup"
        value: "satellites"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

inventory_groups:
  - bastions
  - satellites

# # Environment Pods
# pods:
#   - name: bind9
#     dockerfile: true
#     volumes:
#       - /var/named/
#       - /etc/
#     config_templates:
#       - src: example.com.zone.j2
#         dest: /var/named/example.com.zone
#     config_files:
#       - src: named.conf
#         dest: /etc/named.conf

#   - name: gitlab
#     volumes:
#       - /etc/gitlab
#       - /var/log/gitlab
#       - /var/opt/gitlab

#   - name: haproxy
#     dockerfile: true
#     volumes:
#       - /etc/haproxy
#       - /etc/ssl/certs
#     config_templates:
#       - src: haproxy.cfg.j2
#         dest: /etc/haproxy/haproxy.cfg
#     letsencrypt_cert_dirs:
#       - /etc/ssl/certs/

# Lab Manager Path
lab_mgr_dir: /srv/lab-manager
...
