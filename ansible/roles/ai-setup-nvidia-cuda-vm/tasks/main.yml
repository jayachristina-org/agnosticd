---
# tasks file for fedora-cuda

- name: Setup Nvidia Drivers and CUDA for Fedora
  when: ansible_distribution == 'Fedora'
  block:

    - name: Add a DNF repository
      ansible.builtin.yum_repository:
        name: cuda-fedora39
        description: NVIDIA CUDA Repository
        baseurl: https://developer.download.nvidia.com/compute/cuda/repos/fedora39/x86_64
        enabled: true
        gpgcheck: false

    - name: Setup nvdia repo, drivers, and cuda
      ansible.builtin.dnf:
        name: "{{ package }}"
        state: present
      loop:
        - pciutils
        - nvtop
        - cuda-toolkit-12-4
        - "@nvidia-driver:open-dkms"
      loop_control:
        loop_var: package

- name: Debug - Setup Nvidia Drivers and CUDA
  when: ai_setup_nvidia_cuda_vm_debug | default(false) | bool
  block:

    - name: Check video driver
      ansible.builtin.shell: "lspci -nn -k | grep -A 2 -e VGA -e 3D"
      register: r_video_driver_check
      changed_when: false
      ignore_errors: true

    - name: Output video driver check
      ansible.builtin.debug:
        var: r_video_driver_check.stdout_lines

# TODO: Need to add a check here to see if the video driver is in use, if not, reboot the machine

- name: Reboot the machine
  ansible.builtin.reboot:
    msg: "Reboot initiated by Ansible"
    connect_timeout: 5    # Time in seconds to wait for the host to shutdown and start the connection attempt.
    reboot_timeout: 600   # Time in seconds to wait for the machine to reboot.
    pre_reboot_delay: 0   # Time in seconds to wait before shutting down (if you need to warn users).
    post_reboot_delay: 30 # Time in seconds to wait after the machine is back up, before continuing with subsequent tasks.
    test_command: uptime  # Command to execute repeatedly until the target machine responds, indicating it's back online.
