---

- name: Install generic build and developer packages
  dnf:
    name:
      - g++
      - gcc
      - make
      - pip
      - python3
      - python3-devel
      - python3-GitPython
    state: present
    

- name: Install Python 3.11 and development tools
  dnf:
    name:
      - python3.11
      - python3.11-devel
    state: present

- name: Remove old virtual environment if it exists
  vars:
    install_path: "/home/fedora"  # Change this to your path
  file:
    path: "{{ install_path }}/venv"
    state: absent

- name: Create a new Python 3.11 virtual environment
  become_user: fedora
  vars:
    install_path: "/home/fedora"  # Change this to your path
  command: python3.11 -m venv venv
  args:
    chdir: "{{ install_path }}"
    creates: "{{ install_path }}/venv"

- name: Clone InstructLab repository if not present
  become_user: fedora
  vars:
    install_path: "/home/fedora"  # Change this to your path
    repo_url: "https://github.com/instructlab/instructlab"
  git:
    repo: "{{ repo_url }}"
    dest: "{{ install_path }}/instructlab"
    version: "main"
    clone: yes
    update: yes
  register: git_clone_instructlab

- name: Install InstructLab package
  become_user: fedora
  vars:
    install_path: "/home/fedora"  # Change this to your path
  shell: source {{ install_path }}/venv/bin/activate && pip install --upgrade pip && pip install {{ install_path }}/instructlab
  args:
    chdir: "{{ install_path }}"
  when: git_clone_instructlab.changed


# ## this can be removed i think
# - name: Set environment variables for CUDA
#   vars:
#     cuda_home: "/usr/local/cuda"
#     cuda_lib_path: "/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64"
#   set_fact:
#     CUDA_HOME: "{{ cuda_home }}"
#     LD_LIBRARY_PATH: "{{ cuda_lib_path }}"
#     PATH: "{{ ansible_env.PATH }}:{{ cuda_home }}/bin"


- name: Add CUDA environment variables to /etc/environment
  vars:
    cuda_home: "/usr/local/cuda"
    cuda_lib_path: "/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64"
  lineinfile:
    insertafter: EOF
    path: /etc/environment
    line: "{{ item.var }}={{ item.value }}"
    create: yes
  with_items:
    - { var: 'CUDA_HOME', value: '{{ cuda_home }}' }
    - { var: 'LD_LIBRARY_PATH', value: '{{ cuda_lib_path }}' }
    - { var: 'PATH', value: '$PATH:{{ cuda_home }}/bin' }
  become: yes

- name: Export CUDA environment variables in .bashrc
  vars:
    cuda_home: "/usr/local/cuda"
    cuda_lib_path: "/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64"
  lineinfile:
    insertafter: EOF
    path: "/home/fedora/.bashrc"
    line: "export {{ item.var }}={{ item.value }}"
    create: yes
  with_items:
    - { var: 'CUDA_HOME', value: '{{ cuda_home }}' }
    - { var: 'LD_LIBRARY_PATH', value: '{{ cuda_lib_path }}' }
    - { var: 'PATH', value: '$PATH:{{ cuda_home }}/bin' }


- name: Export CUDA environment variables in venv activate
  vars:
    cuda_home: "/usr/local/cuda"
    cuda_lib_path: "/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64"
  lineinfile:
    insertafter: EOF
    path: "/home/fedora/venv/bin/activate"
    line: "export {{ item.var }}={{ item.value }}"
    create: yes
  with_items:
    - { var: 'CUDA_HOME', value: '{{ cuda_home }}' }
    - { var: 'LD_LIBRARY_PATH', value: '{{ cuda_lib_path }}' }
    - { var: 'PATH', value: '$PATH:{{ cuda_home }}/bin' }

## This is currently where things break
- name: Install llama-cpp-python 0.2.55
  vars:
    install_path: "/home/fedora"  # Change this to your path
  shell: source {{ install_path }}/venv/bin/activate && pip install llama-cpp-python[server]==0.2.55  
  args:
    chdir: "{{ install_path }}/instructlab"
    executable: /bin/bash

- name: Install and recompile llama-cpp-python using CUDA
  vars:
    install_path: "/home/fedora"  # Change this to your path
  shell: source {{ install_path }}/venv/bin/activate && CMAKE_ARGS="-DLLAMA_CUBLAS=on" pip install --force-reinstall --no-cache-dir llama-cpp-python[server]==0.2.55
  args:
    chdir: "{{ install_path }}/instructlab"
    executable: /bin/bash

- name: Clone taxonomy repository if not present
  vars:
    install_path: "/home/fedora"  # Change this to your path
    taxonomy_repo_url: "https://github.com/instructlab/taxonomy"
  git:
    repo: "{{ taxonomy_repo_url }}"
    dest: "{{ install_path }}/taxonomy"
    version: "main"
    clone: yes
    update: yes
  register: git_clone_taxonomy

- name: Initialize InstructLab non-interactively
  vars:
    install_path: "/home/fedora"  # Change this to your path
  shell: source {{ install_path }}/venv/bin/activate && ilab init --non-interactive --model-path models/merlinite-7b-Q4_K_M.gguf --taxonomy-path taxonomy && ilab download
  args:
    chdir: "{{ install_path }}"
  when: git_clone_taxonomy.changed
