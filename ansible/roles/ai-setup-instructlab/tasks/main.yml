---
# tasks file for fedora-cuda

# TODO: Make this gPU agnostic, building it initially around Nvidia and CUDA
# TODO: Extract vars to defaults/main.yml

- name: Set CUDA related vars for all users
  ansible.builtin.blockinfile:
    path: /etc/environment
    block: |
      CUDA_HOME={{ ai_setup_ilab_cuda_home }}
      LD_LIBRARY_PATH={{ ai_setup_ilab_cuda_lib_path }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    create: true

- name: Set CUDA related vars in .bashrc
  ansible.builtin.blockinfile:
    path: "/home/{{ ai_setup_ilab_user }}/.bashrc"
    block: |
      CUDA_HOME={{ ai_setup_ilab_cuda_home }}
      LD_LIBRARY_PATH={{ ai_setup_ilab_cuda_lib_path }}
      PATH=$PATH:/usr/local/cuda/bin
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    create: true
  become_user: "{{ ai_setup_ilab_user | default('fedora') }}"

# TODO: Extract vars to defaults/main.yml

- name: Setup AI developer packages
  ansible.builtin.dnf:
    name: "{{ package }}"
    state: present
  loop: "{{ ai_setup_ilab_developer_packages }}"
  loop_control:
    loop_var: package

- name: Set system default Python version, to 3.11
  ansible.builtin.alternatives:
    name: python
    link: /usr/bin/python
    path: /usr/bin/python3.11

# TODO: Extract vars to defaults/main.yml and make more generic
- name: Setup the users InstructLab environment
  block:

    - name: Clone InstructLab repository
      ansible.builtin.git:
        repo: "{{ ai_setup_ilab_repo_url }}"
        dest: "{{ ai_setup_ilab_install_path_base }}/instructlab"
        version: "main"
        clone: true
        update: true
      register: r_git_clone_instructlab

    - name: Clone taxonomy repository if not present
      ansible.builtin.git:
        repo: "{{ ai_setup_ilab_taxonomy_repo_url }}"
        dest: "{{ ai_setup_ilab_install_path_base }}/taxonomy"
        version: "main"
        clone: true
        update: true
      register: r_git_clone_taxonomy

  become_user: "{{ ai_setup_ilab_user | default('fedora') }}"

# TODO: THis python setup seems hideous but it works, need to find a better way
# TODO: Remove hard paths etc

- name: Venv and iLab Python setup
  block:

    - name: Setup a Python 3.11 virtual environment
      ansible.builtin.command:
        cmd: "python3.11 -m venv /home/fedora/instructlab/venv"
      args:
        creates: /home/fedora/instructlab/venv

    - name: Upgrade venv pip
      ansible.builtin.command:
        cmd: "/home/fedora/instructlab/venv/bin/python -m pip install --upgrade pip"

    - name: Install InstructLab package
      when: r_git_clone_instructlab.changed
      ansible.builtin.command:
        cmd: "/home/fedora/instructlab/venv/bin/pip install {{ ai_setup_ilab_install_path_base }}/instructlab/"

    - name: Initialize InstructLab non-interactively
      ansible.builtin.command:
        cmd: >-
         /home/fedora/instructlab/venv/bin/ilab init --non-interactive
         --model-path models/merlinite-7b-Q4_K_M.gguf --taxonomy-path taxonomy && ilab download

    - name: Automatically activate venv at login via .bashrc
      ansible.builtin.lineinfile:
        path: "/home/{{ ai_setup_ilab_user }}/.bashrc"
        line: 'source instructlab/venv/bin/activate'
        create: true
        state: present
        insertafter: EOF

  become_user: "{{ ai_setup_ilab_user | default('fedora') }}"
  become: true